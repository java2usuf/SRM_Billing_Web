package com.mkyong.web.controller;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver;

import com.mkyong.web.model.LineItem;
import com.mkyong.web.model.Transaction;

public class PrinterHelper {

	int totalQuantity=0;
	
	public void mappingTheData(Transaction txn,List<LineItem> lineList){

    	PrinterOptions p=new PrinterOptions();
    	DateFormat df = new SimpleDateFormat("dd-MM-yy hh:mm a");
        p.resetAll();
        p.initialize();
        p.feedBack((byte)2);
        p.doubleHeight(true);
        
        p.alignCenter();
        p.chooseFont(3);
        p.doubleStrik(true);
        p.setText("SAFIRE TEX");
        p.doubleStrik(false);
        p.doubleHeight(false);
        p.newLine();
        p.newLine();
        p.setText("Tirupattur - 635601");
        p.newLine();
        p.newLine();
        p.setText("TIN : 33374620483 \t Mobile :+91 98434 45699");
        p.newLine();
        p.addLineSeperator();
        p.newLine();
        p.chooseFont(1);
        p.setText("Bill No\t: ");
        p.doubleStrik(true);
        p.setText(""+txn.getAutoGeneratedId());
        p.doubleStrik(false);
        p.setText("\t Date: " +  df.format(new Date()));
        p.newLine();
        p.addLineSeperator();
        p.newLine();
        p.alignLeft();
        p.setText("No\tItem\t\tQty\tPrice\tTotal");
        p.newLine();
        p.addLineSeperator();
        p.newLine();
        int counter = 1;
		for(LineItem lineItem:lineList){
			String temp=String.format("%2s", counter++).replace(' ', '0')+"\t"+
					String.format("%-10s", lineItem.getItemDesc())+"\t"+
					String.format("%3s", quantity(lineItem.getQuantity())+"\t"+
					String.format("%4s", lineItem.getPrice())+"\t"+
					String.format("%8s", lineItem.getLineTotal()));
			p.alignLeft();
			p.setText(temp);
			p.newLine();
		}
		p.addLineSeperator();
		String temp=String.format("%2s", "")+"\t"+
				String.format("%-10s", "")+"\t"+
				String.format("%-3s", getTotalQuantity()+"")+"\t"+
				String.format("%4s", "")+"\t"+
				String.format("%8s", txn.getSubTotal());
		p.setText(temp);
		p.newLine();
		int discount = -1;
		try {
			discount = Integer.parseInt(txn.getDiscountPercentage().trim());
		} catch (NumberFormatException e) {
			System.out.println("DISCOUNT ERROR ");
		}
		
		if(discount > 0){
			p.newLine();
			p.alignRight();
			p.setText("Discount ");
			p.doubleStrik(true);
			p.setText("(-"+txn.getDiscountPercentage()+"% )\t");
			p.doubleStrik(false);
			p.setText(txn.getDiscountedAmount());
		}
		
		p.newLine();
		p.addLineSeperator();
		p.alignCenter();
		p.newLine();
		p.newLine();
		p.setText("Bill Amount = \t" );
		p.doubleStrik(true);
		p.doubleHeight(true);
		p.setText(txn.getTotalAfterDiscount() +"/-");
		p.doubleStrik(false);
		p.doubleHeight(false);
		int totalAmount = (int)Float.parseFloat(txn.getTotalAfterDiscount());
		
		if(totalAmount > 100){
			p.newLine();
			p.newLine();
			
			p.newLine();
			p.doubleStrik(true);
			p.setText("**** You WON "+ totalAmount /100 +" Points ****" );
			p.doubleStrik(false);
		}
		
		
		p.feed((byte)2);
        p.finit();
        p.feedPrinter(p.finalCommandSet().getBytes());
	}
	
	
	
	public String quantity(String qty){
		setTotalQuantity(qty);
		return qty;
		
	}
	
	public void setTotalQuantity(String totalQuantity) {
		try{
			int parseInt = Integer.parseInt(totalQuantity);
			this.totalQuantity += parseInt;
		}catch(Exception e){
			e.printStackTrace();
		}
	}
	
	public int getTotalQuantity() {
		return totalQuantity;
	}
	
}
